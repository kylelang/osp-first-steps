[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "first_steps",
    "section": "",
    "text": "This is a Quarto website."
  },
  {
    "objectID": "index.html#hello-world",
    "href": "index.html#hello-world",
    "title": "first_steps",
    "section": "Hello World!",
    "text": "Hello World!\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "sections/1_basic_commands.html",
    "href": "sections/1_basic_commands.html",
    "title": "Basic Commands",
    "section": "",
    "text": "The comment character in R is #. Each commented line must be preceded by a # symbol. There are no block comments in R. Comments are not evaluated when you run your code\nRun the following R code to generate a vector of 10 numbers and print the result.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nIn the following code, the expression 1:10 is “commented out”, so R doesn’t evaluate that line.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "sections/1_basic_commands.html#comments",
    "href": "sections/1_basic_commands.html#comments",
    "title": "Basic Commands",
    "section": "",
    "text": "The comment character in R is #. Each commented line must be preceded by a # symbol. There are no block comments in R. Comments are not evaluated when you run your code\nRun the following R code to generate a vector of 10 numbers and print the result.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nIn the following code, the expression 1:10 is “commented out”, so R doesn’t evaluate that line.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "sections/1_basic_commands.html#assignment",
    "href": "sections/1_basic_commands.html#assignment",
    "title": "Basic Commands",
    "section": "Assignment",
    "text": "Assignment\nTo do anything useful, we need to create objects that hold data. We ‘assign’ values to objects via the ‘assignment’ operator, &lt;-.\nRun the following code to assign the values 7, 2.5, and \"foo\" to the objects x, y, and z, respectively.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNotice the lack of printed output. These three commands create three new objects in your environment (x, y, z) that store the assigned data values (7, 2.5, \"foo\"). However, we haven’t yet asked R to do anything with those stored values, so we don’t see any printed output.\nTo view the contents of an object, we can evaluate the object’s name without assignment.\nRun the following code to print the values saved as x and y.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWe can also create new objects by assigning them the values of existing objects.\nRun the following code to create a new object w that takes the value of the existing object z.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "sections/1_basic_commands.html#mathematical-operators",
    "href": "sections/1_basic_commands.html#mathematical-operators",
    "title": "Basic Commands",
    "section": "Mathematical Operators",
    "text": "Mathematical Operators\nAll of the familiar arithmetic operators are available in R. When we do arithmetic on named R objects, the values stored in those objects are used to evaluate the expression.\nRun the following code to add, subtract, multiply, and divide the values stored as y and x.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWe use the carret character, ^, to specify exponents.\nRun the following code to square and cube the value of y.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nThe sqrt() function returns the square root of it’s argument (i.e., the value we specify inside the parantheses).\nRun the following code to calculate the square root of y.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nFor other roots, we can use fractional exponents.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nR also includes special functions for the most common logarithms as well as the anti-log operator.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNote that log(y) calculates the natural logarithm of y, \\(\\ln(y)\\). If you want the “ordinary” base-10 log, you need to use the log10() function."
  },
  {
    "objectID": "sections/1_basic_commands.html#practice",
    "href": "sections/1_basic_commands.html#practice",
    "title": "Basic Commands",
    "section": "Practice",
    "text": "Practice\n\nCreate an object called age that takes the value of your age in whole years.\nUse the age object you created in above to create a second object called weeks that takes the value of your age in whole weeks.\n\nAssume 52 weeks in each year.\nDisregard partial years (i.e., assume every year counted in age contains 52 whole weeks).\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "sections/1_basic_commands.html#logical-comparisons",
    "href": "sections/1_basic_commands.html#logical-comparisons",
    "title": "Basic Commands",
    "section": "Logical Comparisons",
    "text": "Logical Comparisons\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWe can negate any logical condition by prepending the ‘!’ character\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nRather than negating an equality check, we will typically use the special “not-equal” operator, !=.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWe can create more complex logical conditions with the AND and OR operators: & and |.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "sections/1_basic_commands.html#practice-1",
    "href": "sections/1_basic_commands.html#practice-1",
    "title": "Basic Commands",
    "section": "Practice",
    "text": "Practice\nUse a single line of code to generate a logical value (i.e., TRUE/FALSE) indicating if the value of the ‘weeks’ object you created above is evenly divisible by 7.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "sections/1_basic_commands.html#order-of-operations",
    "href": "sections/1_basic_commands.html#order-of-operations",
    "title": "Basic Commands",
    "section": "Order of Operations",
    "text": "Order of Operations\nWhen parsing your commands, R will, mostly, scan each line of code from left to right and apply each mathematical operation according to the usual PEMDAS ordering.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "sections/1_basic_commands.html#interacting-with-the-environment",
    "href": "sections/1_basic_commands.html#interacting-with-the-environment",
    "title": "Basic Commands",
    "section": "Interacting with the Environment",
    "text": "Interacting with the Environment\nThe ‘environment’ is a loosely organized set of all the objects that R currently has stored in working memory\nWe can use the ls() function to list the contents of the current environment.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nThe rm() function will remove an object from the environment.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "sections/1_basic_commands.html#practice-2",
    "href": "sections/1_basic_commands.html#practice-2",
    "title": "Basic Commands",
    "section": "Practice",
    "text": "Practice\nUse the rm() function to remove the age object that you created above from your environment.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  }
]