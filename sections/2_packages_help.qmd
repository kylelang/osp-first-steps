## Add-On Packages

When you install R, you're only installing the core set of functionality. You can already do quite a lot with this
baseline R installation (e.g., a complete linear regression analysis), but you will usually need functinality provided
by add-on *packages* to complete most real-world data analyses.

For example:

- If your data are incomplete and you want to treat the missing data using multiple imputation, then you will
need to install a package like [mice](), [amelia](), or [mi]().
- If you want to use structural equation modeling to analyze your data, then you will need to install something like 
[lavaan]() or [openmx]().
- To estimate multilevel regression models, you will need [lme4]().
- For all but the most trivial data processing, manipulation, and visualization, the [tidyverse]() packages are
indespesible (unless you enjoy making your work needlessly more painful).

```{webr-r}
## Use the default CRAN mirror
install.packages("psych")
```

```{r, eval = FALSE}
## Specify the CRAN mirror a priori
install.packages(c("lattice", "gridExtra"),
                 repos = "http://cloud.r-project.org")

## Specify a non-standard directory into which the packages will be installed
install.packages("mvtnorm",
                 repos = "http://cloud.r-project.org",
                 lib = "../software")

## Install from local source
install.packages("../software/magrittr_2.0.1.tar.gz",
                 repos = NULL,
                 type = "Source")
```

## Practice

Use the install.packages() function to install the following packages in the default location (i.e., don't specify
anything for the 'lib' argument).

- `ggplot2`
- `dplyr`
- `haven`

```{webr-r}
```

## Getting Help

Every R function provided by a Core R package or an add-on package distributed through CRAN must come with documentation
(AKA, a help file). This documentation always follows the same general structure. Below, you see the documentation for 
the `if_else()` function from the **dplyr** package.

<div class=".container">

```{=html}

{{< include /if_else.html >}}

```

{{< include /sections/_if_else_examples.qmd >}}

</div>

```{r, eval = FALSE}
## Prepending the '?' character will access the help file for a function
?lm

## We can also use the 'help' function
help(lm)
help("lm")

## Non-letter characters need to be quoted
?/
help(/)
?"/"
help("/")

## If a package is not loaded, we need to specify the namespace
?quickpred
?mice::quickpred
help(quickpred, package = "mice")

## We can also open an interactive web-based help page
help.start()

################################################################################
## PRACTICE PROBLEM 1.5
##
##  (a) Access the help file for the vector() function.
##  (b) How many arguments does the vector() function take?
##
################################################################################

```
